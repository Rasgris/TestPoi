package poi;

import java.awt.geom.Rectangle2D;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.sl.usermodel.ObjectMetaData.Application;
import org.apache.poi.sl.usermodel.ObjectShape;
import org.apache.poi.sl.usermodel.PictureData;
import org.apache.poi.sl.usermodel.Slide;
import org.apache.poi.sl.usermodel.SlideShow;
import org.apache.poi.sl.usermodel.SlideShowFactory;
import org.apache.poi.sl.usermodel.PictureData.PictureType;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.apache.poi.xslf.usermodel.XMLSlideShow;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*This is a stand alone version of the ooxml\testcases\org\apache\poi\sl\TestOleShape.java*/
public class EmbedXSSFIntoXSLF {
	 static InputStream pictureFile = EmbedXSSFIntoXSLF.class.getResourceAsStream("/pptIcon.emf");

	public static void main(String args[]) throws IOException, InvalidFormatException {
		final ByteArrayInputStream pptBytes;
		
        try (SlideShow<?,?> ppt = createSlideShow()) {
        	
            final PictureData picData = ppt.addPicture(pictureFile,  PictureType.EMF);
            final Slide<?,?> slide = ppt.createSlide();
            final ObjectShape<?,?> oleShape = slide.createOleShape(picData);
            oleShape.setAnchor(new Rectangle2D.Double(100,100,100,100));
            try (OutputStream os = oleShape.updateObjectData(Application.EXCEL_V12, null)) {
                fillOleData(os);
            }
            final ByteArrayOutputStream bos = new ByteArrayOutputStream(50000);
            ppt.write(bos);
            pptBytes = new ByteArrayInputStream(bos.toByteArray());

            File pptx = new File(System.getProperty("user.home")+"\\desktop\\test.pptx");
            FileOutputStream p = new FileOutputStream(pptx);
            ppt.write(p);
        }
        try (SlideShow<?,?> ppt = SlideShowFactory.create(pptBytes)) {
            final ObjectShape<?,?> oleShape = (ObjectShape<?,?>)ppt.getSlides().get(0).getShapes().get(0);
            try (InputStream bis = oleShape.readObjectData()) {
                validateOleData(bis);
            }
        }
       
	}
	 private static SlideShow<?,?> createSlideShow() {
	        
	            return new XMLSlideShow();
	        
	}
	private static void fillOleData(final OutputStream out) throws IOException {
        Workbook wb = new XSSFWorkbook();
        wb.createSheet().createRow(0).createCell(0).setCellValue("test me");
        wb.write(out);
            
        
    }
	 private static void validateOleData(final InputStream in) throws IOException, InvalidFormatException {
	      Workbook wb = WorkbookFactory.create(in);
	      System.out.println(wb.getSheetAt(0).getRow(0).getCell(0).getStringCellValue()) ;
	    
	}
}
